name: C++ Build

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build_test_and_analyse:
    runs-on: [self-hosted, linux, x64]
    env:
      # https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/
      # Directory where build-wrapper output will be placed
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
      SONAR_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      TARGET_DIR: "/home/actions/actions-runner/_work/bdk-cpp/bdk-cpp"
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Clone the repository
        shell: bash
        run: git clone https://github.com/${{ github.repository }} ${{ env.TARGET_DIR}} || true
      - name: Checkout to current branch
        shell: bash
        run: git -C ${{env.TARGET_DIR}} checkout -b ${{env.BRANCH_NAME}}
      - name: Sync to remote repository
        run: git -C ${{env.TARGET_DIR}} fetch
      - name: Update local repository
        run: git -C ${{env.TARGET_DIR}} pull
      - name: Build the container
        run: ./scripts/auto.sh -s bdk build
      - name: Stop the container
        run: ./scripts/auto.sh -s bdk stop
      - name: Restart the container
        run: ./scripts/auto.sh -s bdk up
      - name: Clean previos build (if any)
        run: ./scripts/auto.sh -s bdk exec 'make -C /bdk-cpp/build clean' || true
      - name: Configure MOLD linker
        run: ./scripts/auto.sh -s bdk exec 'cmake -S /bdk-cpp -B /bdk-cpp/build
             -DSONARQUBE_ANALYSIS=ON -DDEBUG=OFF
             -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=mold\"
             -DCMAKE_SHARED_LINKER_FLAGS=\"-fuse-ld=mold\"'
      - name: Build with SonarQube BuildWrapper + CMake
        run: ./scripts/auto.sh -s bdk exec \
             'build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}
              cmake --build /bdk-cpp/build/ --config Release -- -j $(nproc)'
      - name: Run Tests
        run: ./scripts/auto.sh -s bdk exec \
             '/bdk-cpp/build/src/bins/bdkd-tests/bdkd-tests -d yes'
      - name: Run SonarQube Scanner
        run: ./scripts/auto.sh -s bdk exec sh -c \
             'cd /bdk-cpp; env SONAR_TOKEN=${{ env.SONAR_TOKEN }} sonar-scanner
             --define sonar.cfamily.build-wrapper-output=${{ env.BUILD_WRAPPER_OUT_DIR }}
             --define sonar.coverageReportPaths=coverage.xml'
      # documentation:
      # - name: Generate Doxygen Documentation
      #   run: ./scripts/auto.sh -s bdk exec 'doxygen /bdk-cpp/Doxyfile'
      # - name: Publish Documentation
      #   uses: actions/upload-artifact@v4
      #   with:
      #   name: Documentation
      #   path: docs
