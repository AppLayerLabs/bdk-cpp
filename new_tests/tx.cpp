#include "../new_src/libs/catch2/catch_amalgamated.hpp"
#include "../new_src/utils/utils.h"
#include "../new_src/utils/tx.h"

using Catch::Matchers::Equals;

namespace TTX {
  TEST_CASE("TxBlock", "[utils]") {
    SECTION("Simple Transaction 1") {
      //  "nonce": 2,
      //  "gasPrice": 71000000000,
      //  "gasLimit": 21000,
      //  "to": "0xf137c97b1345f0a7ec97d070c70cf96a3d71a1c9",
      //  "value": 7353873760000000,
      //  "data": "",
      //  "from": "0x279312b596f426aeea3adfaf79a4bb24c4368beb",
      //  "r": "d738fcbf48d672da303e56192898a36400da52f26932dfe67b459238ac86b551",
      //  "v": "25",
      //  "s": "0a60deb51469ae5b0dc4a9dd702bad367d1111873734637d428626640bcef15c"
      TxBlock tx(Hex::toBytes("f86b02851087ee060082520894f137c97b1345f0a7ec97d070c70cf96a3d71a1c9871a204f293018008025a0d738fcbf48d672da303e56192898a36400da52f26932dfe67b459238ac86b551a00a60deb51469ae5b0dc4a9dd702bad367d1111873734637d428626640bcef15c"));

      REQUIRE(tx.nonce() == 2);
      REQUIRE(tx.gasPrice() == uint256_t("71000000000"));
      REQUIRE(tx.gas() ==  21000);
      REQUIRE(tx.to() == Address(std::string_view("0xf137c97b1345f0a7ec97d070c70cf96a3d71a1c9"), false));
      REQUIRE(tx.value() == uint256_t("7353873760000000"));
      REQUIRE(tx.data() == Hex::toBytes(""));
      REQUIRE(tx.from() == Address(std::string_view("0x279312b596f426aeea3adfaf79a4bb24c4368beb"), false));
      REQUIRE(tx.r() == uint256_t("97347950278129771725048946454297431073977916303978115819430708259653065028945"));
      REQUIRE(tx.s() == uint256_t("4694282873640443545574231586479962476127424271701698807158512046516151972188"));
      REQUIRE(tx.v() == 37);
      REQUIRE_THAT(tx.rlpSerialize(), Equals(Hex::toBytes("f86b02851087ee060082520894f137c97b1345f0a7ec97d070c70cf96a3d71a1c9871a204f293018008025a0d738fcbf48d672da303e56192898a36400da52f26932dfe67b459238ac86b551a00a60deb51469ae5b0dc4a9dd702bad367d1111873734637d428626640bcef15c")));
    }

    SECTION("Simple Transaction 2") {
      //   "nonce": 0,
      //   "gasPrice": 101000000000,
      //   "gasLimit": 258389,
      //   "to": "0xbcf935d206ca32929e1b887a07ed240f0d8ccd22",
      //   "value": 30000000000000000,
      //   "data": "8853b53e00000000000000000000000000000000000000000000000000000000000a4d79",
      //   "from": "0x279312b596f426aeea3adfaf79a4bb24c4368beb",
      //   "r": "5ca395600115460cf539c25ac9f3140f71b10db78eca64c43873921b9f96fc27",
      //   "v": "25",
      //   "s": "727953c15ff2725c144ba16d458b29aa6fbfae3feade7c8c854b08223178337e"
      TxBlock tx(Hex::toBytes("0xf8908085178411b2008303f15594bcf935d206ca32929e1b887a07ed240f0d8ccd22876a94d74f430000a48853b53e00000000000000000000000000000000000000000000000000000000000a4d7925a05ca395600115460cf539c25ac9f3140f71b10db78eca64c43873921b9f96fc27a0727953c15ff2725c144ba16d458b29aa6fbfae3feade7c8c854b08223178337e"));

      REQUIRE(tx.nonce() == 0);
      REQUIRE(tx.gasPrice() == uint256_t("101000000000"));
      REQUIRE(tx.gas() ==  258389);
      REQUIRE(tx.to() == Address(std::string_view("0xbcf935d206ca32929e1b887a07ed240f0d8ccd22"), false));
      REQUIRE(tx.value() == uint256_t("30000000000000000"));
      REQUIRE(tx.data() == Hex::toBytes("8853b53e00000000000000000000000000000000000000000000000000000000000a4d79"));
      REQUIRE(tx.from() == Address(std::string_view("0x279312b596f426aeea3adfaf79a4bb24c4368beb"), false));
      REQUIRE(tx.r() == uint256_t("41901809089693999974129375521417939741880099148096042771059180304686223129639"));
      REQUIRE(tx.v() == uint256_t("37"));
      REQUIRE(tx.s() == uint256_t("51778031291651447658465284139937418000921280056049493911617165601823117554558"));
      REQUIRE_THAT(tx.rlpSerialize(), Equals(Hex::toBytes("0xf8908085178411b2008303f15594bcf935d206ca32929e1b887a07ed240f0d8ccd22876a94d74f430000a48853b53e00000000000000000000000000000000000000000000000000000000000a4d7925a05ca395600115460cf539c25ac9f3140f71b10db78eca64c43873921b9f96fc27a0727953c15ff2725c144ba16d458b29aa6fbfae3feade7c8c854b08223178337e")));
    }

    SECTION("Advanced Transaction 1") {
      //  "nonce": 54100,
      //  "gasPrice": 25000000000,
      //  "gasLimit": 380800,
      //  "to": "0x18df1967e5cc30ee53d399a8bbf71c3e60b44beb",
      //  "value": 0,
      //  "data": "0d079f8876b0de07c78a02254986f3473fabbb6b4aca5396627ec5c60480d05fa135405e021373121c55ca5bc2a2490000000000000000000000000000000000000000",
      //  "from": "0x0f4240939fda73af82df6694f3fb214cc6357202",
      //  "r": "566e1e6e301e72698e948fee5ca0cd32eab301d66ba2fb4496809fb8cb5b3663",
      //  "v": "0150f7",
      //  "s": "39ef7219cb5c105024f0f586d468f9d41d4ce431c4d3cb6824738ff50a9a0b32"
      TxBlock tx(Hex::toBytes("0xf8ae82d3548505d21dba008305cf809418df1967e5cc30ee53d399a8bbf71c3e60b44beb80b8430d079f8876b0de07c78a02254986f3473fabbb6b4aca5396627ec5c60480d05fa135405e021373121c55ca5bc2a2490000000000000000000000000000000000000000830150f7a0566e1e6e301e72698e948fee5ca0cd32eab301d66ba2fb4496809fb8cb5b3663a039ef7219cb5c105024f0f586d468f9d41d4ce431c4d3cb6824738ff50a9a0b32"));

      REQUIRE(tx.nonce() == 54100);
      REQUIRE(tx.gasPrice() == uint256_t("25000000000"));
      REQUIRE(tx.gas() == 380800);
      REQUIRE(tx.to() == Address(std::string_view("0x18df1967e5cc30ee53d399a8bbf71c3e60b44beb"), false));
      REQUIRE(tx.value() == uint256_t("0"));
      REQUIRE(tx.data() == Hex::toBytes("0d079f8876b0de07c78a02254986f3473fabbb6b4aca5396627ec5c60480d05fa135405e021373121c55ca5bc2a2490000000000000000000000000000000000000000"));
      REQUIRE(tx.from() == Address(std::string_view("0x0f4240939fda73af82df6694f3fb214cc6357202"), false));
      REQUIRE(tx.r() == uint256_t("39093468178338583917643482008412913746314798135970459109331174520004995135075"));
      REQUIRE(tx.v() == uint256_t("86263"));
      REQUIRE(tx.s() == uint256_t("26204896312226686822705788002875995149785418761187323356120226868870457723698"));
      REQUIRE_THAT(tx.rlpSerialize(), Equals(Hex::toBytes("0xf8ae82d3548505d21dba008305cf809418df1967e5cc30ee53d399a8bbf71c3e60b44beb80b8430d079f8876b0de07c78a02254986f3473fabbb6b4aca5396627ec5c60480d05fa135405e021373121c55ca5bc2a2490000000000000000000000000000000000000000830150f7a0566e1e6e301e72698e948fee5ca0cd32eab301d66ba2fb4496809fb8cb5b3663a039ef7219cb5c105024f0f586d468f9d41d4ce431c4d3cb6824738ff50a9a0b32")));
    }

    SECTION("Advanced Transaction 2") {
      //  "nonce": 1230,
      //  "gasPrice": 25000000000,
      //  "gasLimit": 174298,
      //  "to": "0x60ae616a2155ee3d9a68541ba4544862310933d4",
      //  "value": 11904150190484301209,
      //  "data": "a2a1623d00000000000000000000000000000000000000000000001ef029ff29066a6bff000000000000000000000000000000000000000000000000000000000000008000000000000000000000000055476e450bd6931b64b2611bb21167dcab7a26c40000000000000000000000000000000000000000000000000000017e0edf45a20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000006e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd",
      //  "from": "0x55476e450bd6931b64b2611bb21167dcab7a26c4",
      //  "r": "a6460607154957e7e057b1c703750817e1108115cebe7d462c60d9b8c75f256c",
      //  "v": "0150f7",
      //  "s": "055efaf2abc34eea4b22e22925119d9add503aff648de9f77c2f8a19895a8c19"
      TxBlock tx(Hex::toBytes("0xf901578204ce8505d21dba008302a8da9460ae616a2155ee3d9a68541ba4544862310933d488a534098700b72599b8e4a2a1623d00000000000000000000000000000000000000000000001ef029ff29066a6bff000000000000000000000000000000000000000000000000000000000000008000000000000000000000000055476e450bd6931b64b2611bb21167dcab7a26c40000000000000000000000000000000000000000000000000000017e0edf45a20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000006e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd830150f7a0a6460607154957e7e057b1c703750817e1108115cebe7d462c60d9b8c75f256ca0055efaf2abc34eea4b22e22925119d9add503aff648de9f77c2f8a19895a8c19"));

      REQUIRE(tx.nonce() == 1230);
      REQUIRE(tx.gasPrice() == uint256_t("25000000000"));
      REQUIRE(tx.gas() == 174298);
      REQUIRE(tx.to() == Address(std::string_view("0x60ae616a2155ee3d9a68541ba4544862310933d4"), false));
      REQUIRE(tx.value() == uint256_t("11904150190484301209"));
      REQUIRE(tx.data() == Hex::toBytes("a2a1623d00000000000000000000000000000000000000000000001ef029ff29066a6bff000000000000000000000000000000000000000000000000000000000000008000000000000000000000000055476e450bd6931b64b2611bb21167dcab7a26c40000000000000000000000000000000000000000000000000000017e0edf45a20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000006e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd"));
      REQUIRE(tx.from() == Address(std::string_view("0x55476e450bd6931b64b2611bb21167dcab7a26c4"), false));
      REQUIRE(tx.r() == uint256_t("75207653760796144628811872402617741551981943257922567762153293068114258240876"));
      REQUIRE(tx.v() == 86263);
      REQUIRE(tx.s() == uint256_t("2429379845988038194593421584863147539691633078023313324097079077757425191961"));
      REQUIRE_THAT(tx.rlpSerialize(), Equals(Hex::toBytes("0xf901578204ce8505d21dba008302a8da9460ae616a2155ee3d9a68541ba4544862310933d488a534098700b72599b8e4a2a1623d00000000000000000000000000000000000000000000001ef029ff29066a6bff000000000000000000000000000000000000000000000000000000000000008000000000000000000000000055476e450bd6931b64b2611bb21167dcab7a26c40000000000000000000000000000000000000000000000000000017e0edf45a20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c70000000000000000000000006e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd830150f7a0a6460607154957e7e057b1c703750817e1108115cebe7d462c60d9b8c75f256ca0055efaf2abc34eea4b22e22925119d9add503aff648de9f77c2f8a19895a8c19")));
    }
  }
}
